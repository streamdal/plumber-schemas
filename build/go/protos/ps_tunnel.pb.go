// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ps_tunnel.proto

package protos

import (
	fmt "fmt"
	common "github.com/batchcorp/plumber-schemas/build/go/protos/common"
	opts "github.com/batchcorp/plumber-schemas/build/go/protos/opts"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAllTunnelsRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetAllTunnelsRequest) Reset()         { *m = GetAllTunnelsRequest{} }
func (m *GetAllTunnelsRequest) String() string { return proto.CompactTextString(m) }
func (*GetAllTunnelsRequest) ProtoMessage()    {}
func (*GetAllTunnelsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{0}
}

func (m *GetAllTunnelsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTunnelsRequest.Unmarshal(m, b)
}
func (m *GetAllTunnelsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTunnelsRequest.Marshal(b, m, deterministic)
}
func (m *GetAllTunnelsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTunnelsRequest.Merge(m, src)
}
func (m *GetAllTunnelsRequest) XXX_Size() int {
	return xxx_messageInfo_GetAllTunnelsRequest.Size(m)
}
func (m *GetAllTunnelsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTunnelsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTunnelsRequest proto.InternalMessageInfo

func (m *GetAllTunnelsRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

type GetAllTunnelsResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// Will be set as empty []Tunnel if no tunnels are configured
	Opts                 []*opts.TunnelOptions `protobuf:"bytes,1,rep,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *GetAllTunnelsResponse) Reset()         { *m = GetAllTunnelsResponse{} }
func (m *GetAllTunnelsResponse) String() string { return proto.CompactTextString(m) }
func (*GetAllTunnelsResponse) ProtoMessage()    {}
func (*GetAllTunnelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{1}
}

func (m *GetAllTunnelsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAllTunnelsResponse.Unmarshal(m, b)
}
func (m *GetAllTunnelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAllTunnelsResponse.Marshal(b, m, deterministic)
}
func (m *GetAllTunnelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAllTunnelsResponse.Merge(m, src)
}
func (m *GetAllTunnelsResponse) XXX_Size() int {
	return xxx_messageInfo_GetAllTunnelsResponse.Size(m)
}
func (m *GetAllTunnelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAllTunnelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAllTunnelsResponse proto.InternalMessageInfo

func (m *GetAllTunnelsResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetAllTunnelsResponse) GetOpts() []*opts.TunnelOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type GetTunnelRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	TunnelId             string       `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetTunnelRequest) Reset()         { *m = GetTunnelRequest{} }
func (m *GetTunnelRequest) String() string { return proto.CompactTextString(m) }
func (*GetTunnelRequest) ProtoMessage()    {}
func (*GetTunnelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{2}
}

func (m *GetTunnelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTunnelRequest.Unmarshal(m, b)
}
func (m *GetTunnelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTunnelRequest.Marshal(b, m, deterministic)
}
func (m *GetTunnelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTunnelRequest.Merge(m, src)
}
func (m *GetTunnelRequest) XXX_Size() int {
	return xxx_messageInfo_GetTunnelRequest.Size(m)
}
func (m *GetTunnelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTunnelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTunnelRequest proto.InternalMessageInfo

func (m *GetTunnelRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *GetTunnelRequest) GetTunnelId() string {
	if m != nil {
		return m.TunnelId
	}
	return ""
}

type GetTunnelResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// Set only if status is OK
	Opts                 *opts.TunnelOptions `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *GetTunnelResponse) Reset()         { *m = GetTunnelResponse{} }
func (m *GetTunnelResponse) String() string { return proto.CompactTextString(m) }
func (*GetTunnelResponse) ProtoMessage()    {}
func (*GetTunnelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{3}
}

func (m *GetTunnelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTunnelResponse.Unmarshal(m, b)
}
func (m *GetTunnelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTunnelResponse.Marshal(b, m, deterministic)
}
func (m *GetTunnelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTunnelResponse.Merge(m, src)
}
func (m *GetTunnelResponse) XXX_Size() int {
	return xxx_messageInfo_GetTunnelResponse.Size(m)
}
func (m *GetTunnelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTunnelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTunnelResponse proto.InternalMessageInfo

func (m *GetTunnelResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *GetTunnelResponse) GetOpts() *opts.TunnelOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type CreateTunnelRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth        `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	Opts                 *opts.TunnelOptions `protobuf:"bytes,1,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CreateTunnelRequest) Reset()         { *m = CreateTunnelRequest{} }
func (m *CreateTunnelRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTunnelRequest) ProtoMessage()    {}
func (*CreateTunnelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{4}
}

func (m *CreateTunnelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTunnelRequest.Unmarshal(m, b)
}
func (m *CreateTunnelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTunnelRequest.Marshal(b, m, deterministic)
}
func (m *CreateTunnelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTunnelRequest.Merge(m, src)
}
func (m *CreateTunnelRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTunnelRequest.Size(m)
}
func (m *CreateTunnelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTunnelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTunnelRequest proto.InternalMessageInfo

func (m *CreateTunnelRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *CreateTunnelRequest) GetOpts() *opts.TunnelOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type CreateTunnelResponse struct {
	Status *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	// ID of the created tunnel entry
	TunnelId             string   `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTunnelResponse) Reset()         { *m = CreateTunnelResponse{} }
func (m *CreateTunnelResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTunnelResponse) ProtoMessage()    {}
func (*CreateTunnelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{5}
}

func (m *CreateTunnelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTunnelResponse.Unmarshal(m, b)
}
func (m *CreateTunnelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTunnelResponse.Marshal(b, m, deterministic)
}
func (m *CreateTunnelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTunnelResponse.Merge(m, src)
}
func (m *CreateTunnelResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTunnelResponse.Size(m)
}
func (m *CreateTunnelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTunnelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTunnelResponse proto.InternalMessageInfo

func (m *CreateTunnelResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CreateTunnelResponse) GetTunnelId() string {
	if m != nil {
		return m.TunnelId
	}
	return ""
}

// WARNING: Updating a destination that is in-use can result in missing data during replay
type UpdateTunnelRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth        `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	TunnelId             string              `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	Opts                 *opts.TunnelOptions `protobuf:"bytes,2,opt,name=opts,proto3" json:"opts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateTunnelRequest) Reset()         { *m = UpdateTunnelRequest{} }
func (m *UpdateTunnelRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTunnelRequest) ProtoMessage()    {}
func (*UpdateTunnelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{6}
}

func (m *UpdateTunnelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTunnelRequest.Unmarshal(m, b)
}
func (m *UpdateTunnelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTunnelRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTunnelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTunnelRequest.Merge(m, src)
}
func (m *UpdateTunnelRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTunnelRequest.Size(m)
}
func (m *UpdateTunnelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTunnelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTunnelRequest proto.InternalMessageInfo

func (m *UpdateTunnelRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *UpdateTunnelRequest) GetTunnelId() string {
	if m != nil {
		return m.TunnelId
	}
	return ""
}

func (m *UpdateTunnelRequest) GetOpts() *opts.TunnelOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type UpdateTunnelResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateTunnelResponse) Reset()         { *m = UpdateTunnelResponse{} }
func (m *UpdateTunnelResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTunnelResponse) ProtoMessage()    {}
func (*UpdateTunnelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{7}
}

func (m *UpdateTunnelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTunnelResponse.Unmarshal(m, b)
}
func (m *UpdateTunnelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTunnelResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTunnelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTunnelResponse.Merge(m, src)
}
func (m *UpdateTunnelResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTunnelResponse.Size(m)
}
func (m *UpdateTunnelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTunnelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTunnelResponse proto.InternalMessageInfo

func (m *UpdateTunnelResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Resume a paused relay
type ResumeTunnelRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	TunnelId             string       `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ResumeTunnelRequest) Reset()         { *m = ResumeTunnelRequest{} }
func (m *ResumeTunnelRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeTunnelRequest) ProtoMessage()    {}
func (*ResumeTunnelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{8}
}

func (m *ResumeTunnelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeTunnelRequest.Unmarshal(m, b)
}
func (m *ResumeTunnelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeTunnelRequest.Marshal(b, m, deterministic)
}
func (m *ResumeTunnelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeTunnelRequest.Merge(m, src)
}
func (m *ResumeTunnelRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeTunnelRequest.Size(m)
}
func (m *ResumeTunnelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeTunnelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeTunnelRequest proto.InternalMessageInfo

func (m *ResumeTunnelRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *ResumeTunnelRequest) GetTunnelId() string {
	if m != nil {
		return m.TunnelId
	}
	return ""
}

type ResumeTunnelResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ResumeTunnelResponse) Reset()         { *m = ResumeTunnelResponse{} }
func (m *ResumeTunnelResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeTunnelResponse) ProtoMessage()    {}
func (*ResumeTunnelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{9}
}

func (m *ResumeTunnelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeTunnelResponse.Unmarshal(m, b)
}
func (m *ResumeTunnelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeTunnelResponse.Marshal(b, m, deterministic)
}
func (m *ResumeTunnelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeTunnelResponse.Merge(m, src)
}
func (m *ResumeTunnelResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeTunnelResponse.Size(m)
}
func (m *ResumeTunnelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeTunnelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeTunnelResponse proto.InternalMessageInfo

func (m *ResumeTunnelResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

// Temporarily stop/pause a relay
type StopTunnelRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	TunnelId             string       `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *StopTunnelRequest) Reset()         { *m = StopTunnelRequest{} }
func (m *StopTunnelRequest) String() string { return proto.CompactTextString(m) }
func (*StopTunnelRequest) ProtoMessage()    {}
func (*StopTunnelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{10}
}

func (m *StopTunnelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopTunnelRequest.Unmarshal(m, b)
}
func (m *StopTunnelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopTunnelRequest.Marshal(b, m, deterministic)
}
func (m *StopTunnelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopTunnelRequest.Merge(m, src)
}
func (m *StopTunnelRequest) XXX_Size() int {
	return xxx_messageInfo_StopTunnelRequest.Size(m)
}
func (m *StopTunnelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopTunnelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopTunnelRequest proto.InternalMessageInfo

func (m *StopTunnelRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *StopTunnelRequest) GetTunnelId() string {
	if m != nil {
		return m.TunnelId
	}
	return ""
}

type StopTunnelResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *StopTunnelResponse) Reset()         { *m = StopTunnelResponse{} }
func (m *StopTunnelResponse) String() string { return proto.CompactTextString(m) }
func (*StopTunnelResponse) ProtoMessage()    {}
func (*StopTunnelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{11}
}

func (m *StopTunnelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopTunnelResponse.Unmarshal(m, b)
}
func (m *StopTunnelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopTunnelResponse.Marshal(b, m, deterministic)
}
func (m *StopTunnelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopTunnelResponse.Merge(m, src)
}
func (m *StopTunnelResponse) XXX_Size() int {
	return xxx_messageInfo_StopTunnelResponse.Size(m)
}
func (m *StopTunnelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopTunnelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopTunnelResponse proto.InternalMessageInfo

func (m *StopTunnelResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

type DeleteTunnelRequest struct {
	// Every gRPC request must have a valid auth config
	Auth                 *common.Auth `protobuf:"bytes,9999,opt,name=auth,proto3" json:"auth,omitempty"`
	TunnelId             string       `protobuf:"bytes,1,opt,name=tunnel_id,json=tunnelId,proto3" json:"tunnel_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DeleteTunnelRequest) Reset()         { *m = DeleteTunnelRequest{} }
func (m *DeleteTunnelRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTunnelRequest) ProtoMessage()    {}
func (*DeleteTunnelRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{12}
}

func (m *DeleteTunnelRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTunnelRequest.Unmarshal(m, b)
}
func (m *DeleteTunnelRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTunnelRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTunnelRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTunnelRequest.Merge(m, src)
}
func (m *DeleteTunnelRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTunnelRequest.Size(m)
}
func (m *DeleteTunnelRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTunnelRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTunnelRequest proto.InternalMessageInfo

func (m *DeleteTunnelRequest) GetAuth() *common.Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (m *DeleteTunnelRequest) GetTunnelId() string {
	if m != nil {
		return m.TunnelId
	}
	return ""
}

type DeleteTunnelResponse struct {
	Status               *common.Status `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *DeleteTunnelResponse) Reset()         { *m = DeleteTunnelResponse{} }
func (m *DeleteTunnelResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTunnelResponse) ProtoMessage()    {}
func (*DeleteTunnelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bf3c50f7df99c3c1, []int{13}
}

func (m *DeleteTunnelResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTunnelResponse.Unmarshal(m, b)
}
func (m *DeleteTunnelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTunnelResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTunnelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTunnelResponse.Merge(m, src)
}
func (m *DeleteTunnelResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTunnelResponse.Size(m)
}
func (m *DeleteTunnelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTunnelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTunnelResponse proto.InternalMessageInfo

func (m *DeleteTunnelResponse) GetStatus() *common.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func init() {
	proto.RegisterType((*GetAllTunnelsRequest)(nil), "protos.GetAllTunnelsRequest")
	proto.RegisterType((*GetAllTunnelsResponse)(nil), "protos.GetAllTunnelsResponse")
	proto.RegisterType((*GetTunnelRequest)(nil), "protos.GetTunnelRequest")
	proto.RegisterType((*GetTunnelResponse)(nil), "protos.GetTunnelResponse")
	proto.RegisterType((*CreateTunnelRequest)(nil), "protos.CreateTunnelRequest")
	proto.RegisterType((*CreateTunnelResponse)(nil), "protos.CreateTunnelResponse")
	proto.RegisterType((*UpdateTunnelRequest)(nil), "protos.UpdateTunnelRequest")
	proto.RegisterType((*UpdateTunnelResponse)(nil), "protos.UpdateTunnelResponse")
	proto.RegisterType((*ResumeTunnelRequest)(nil), "protos.ResumeTunnelRequest")
	proto.RegisterType((*ResumeTunnelResponse)(nil), "protos.ResumeTunnelResponse")
	proto.RegisterType((*StopTunnelRequest)(nil), "protos.StopTunnelRequest")
	proto.RegisterType((*StopTunnelResponse)(nil), "protos.StopTunnelResponse")
	proto.RegisterType((*DeleteTunnelRequest)(nil), "protos.DeleteTunnelRequest")
	proto.RegisterType((*DeleteTunnelResponse)(nil), "protos.DeleteTunnelResponse")
}

func init() { proto.RegisterFile("ps_tunnel.proto", fileDescriptor_bf3c50f7df99c3c1) }

var fileDescriptor_bf3c50f7df99c3c1 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0x4f, 0x8b, 0xda, 0x50,
	0x14, 0xc5, 0x49, 0x2b, 0xb6, 0x5e, 0x17, 0xad, 0x89, 0x42, 0xaa, 0x14, 0x24, 0xab, 0x6c, 0x9a,
	0x80, 0x2d, 0x5d, 0xd7, 0x56, 0x2a, 0xdd, 0xb4, 0x10, 0x3b, 0x8b, 0x91, 0x81, 0x90, 0x3f, 0x0f,
	0x13, 0x48, 0xf2, 0xde, 0xe4, 0xde, 0xc7, 0x7c, 0x89, 0x81, 0xf9, 0x9a, 0xf3, 0x31, 0x86, 0xe4,
	0x39, 0x83, 0x71, 0x40, 0x34, 0xe2, 0xea, 0x85, 0x7b, 0x0e, 0xbf, 0x7b, 0xce, 0x5d, 0x04, 0x3e,
	0x08, 0xf4, 0x49, 0x16, 0x05, 0xcb, 0x1c, 0x51, 0x72, 0xe2, 0x7a, 0xb7, 0x7e, 0x70, 0x3c, 0x89,
	0x78, 0x9e, 0xf3, 0xc2, 0x15, 0xe8, 0xab, 0x2f, 0x3f, 0x90, 0x94, 0x28, 0xd3, 0xf8, 0xf3, 0x2b,
	0x11, 0x29, 0x20, 0x89, 0x5b, 0xf9, 0x13, 0x17, 0x84, 0x95, 0x58, 0xbd, 0x0d, 0xbc, 0xf5, 0x03,
	0x86, 0x4b, 0x46, 0xf3, 0x2c, 0xfb, 0x5f, 0x4f, 0xd1, 0x63, 0xb7, 0x92, 0x21, 0xe9, 0x36, 0x74,
	0x2a, 0xbe, 0xf9, 0xf0, 0x77, 0xaa, 0xd9, 0xfd, 0x99, 0xa1, 0xec, 0xe8, 0x28, 0xbc, 0x33, 0x97,
	0x94, 0x78, 0xb5, 0xc3, 0xba, 0x83, 0xd1, 0x1e, 0x01, 0x05, 0x2f, 0x90, 0xe9, 0x0e, 0x74, 0x55,
	0x0a, 0xf3, 0xf1, 0x5d, 0x0d, 0x19, 0xed, 0x41, 0x56, 0xb5, 0xea, 0x6d, 0x5d, 0xba, 0x03, 0x9d,
	0x2a, 0x9f, 0xa9, 0x4d, 0xdf, 0xda, 0xfd, 0xd9, 0xf8, 0xd9, 0x5c, 0xcd, 0x1c, 0xc5, 0xfe, 0x27,
	0x28, 0xe5, 0x05, 0x7a, 0xb5, 0xcf, 0xba, 0x86, 0x8f, 0x4b, 0x46, 0x4a, 0x39, 0x39, 0xb6, 0x3e,
	0x81, 0x9e, 0x3a, 0x84, 0x9f, 0xc6, 0xa6, 0x36, 0xd5, 0xec, 0x9e, 0xf7, 0x5e, 0x0d, 0xfe, 0xc4,
	0x16, 0xc2, 0x60, 0x07, 0x7d, 0x76, 0x1f, 0xed, 0xa8, 0x3e, 0x1c, 0x8c, 0x5f, 0x25, 0x0b, 0x88,
	0xb5, 0xad, 0x74, 0xea, 0xc2, 0x08, 0x86, 0xcd, 0x85, 0x2d, 0x8b, 0x1e, 0x3c, 0xe5, 0xbd, 0x06,
	0xc6, 0x95, 0x88, 0xcf, 0xa8, 0x75, 0x08, 0xff, 0xd2, 0xf9, 0xcd, 0x91, 0x9d, 0x7f, 0xc3, 0xb0,
	0x99, 0xa6, 0x5d, 0x67, 0xeb, 0x06, 0x0c, 0x8f, 0xa1, 0xcc, 0x2f, 0xd2, 0xaa, 0x4a, 0xd9, 0xa4,
	0xb7, 0x4c, 0xb9, 0x86, 0xc1, 0x8a, 0xb8, 0xb8, 0x48, 0xc6, 0x05, 0xe8, 0xbb, 0xec, 0xf6, 0x77,
	0x5c, 0xb0, 0x8c, 0xd1, 0xc5, 0xee, 0xd8, 0xa4, 0xb7, 0x4b, 0xf9, 0xf3, 0xfb, 0xfa, 0xdb, 0x26,
	0xa5, 0x44, 0x86, 0x95, 0xee, 0x86, 0x01, 0x45, 0x49, 0xc4, 0x4b, 0xe1, 0x8a, 0x4c, 0xe6, 0x21,
	0x2b, 0xbf, 0x60, 0x94, 0xb0, 0x3c, 0x40, 0x37, 0x94, 0x69, 0x16, 0xbb, 0x1b, 0xee, 0x2a, 0x5a,
	0xa8, 0x7e, 0xde, 0x5f, 0x9f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x23, 0x56, 0x8d, 0x6e, 0xd6, 0x05,
	0x00, 0x00,
}
