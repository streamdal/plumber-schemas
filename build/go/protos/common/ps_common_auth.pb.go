// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ps_common_auth.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Foreman struct {
	AuthToken            string   `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	PlumberClusterId     string   `protobuf:"bytes,2,opt,name=plumber_cluster_id,json=plumberClusterId,proto3" json:"plumber_cluster_id,omitempty"`
	TeamId               string   `protobuf:"bytes,3,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Foreman) Reset()         { *m = Foreman{} }
func (m *Foreman) String() string { return proto.CompactTextString(m) }
func (*Foreman) ProtoMessage()    {}
func (*Foreman) Descriptor() ([]byte, []int) {
	return fileDescriptor_69536745fee4073a, []int{0}
}

func (m *Foreman) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Foreman.Unmarshal(m, b)
}
func (m *Foreman) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Foreman.Marshal(b, m, deterministic)
}
func (m *Foreman) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Foreman.Merge(m, src)
}
func (m *Foreman) XXX_Size() int {
	return xxx_messageInfo_Foreman.Size(m)
}
func (m *Foreman) XXX_DiscardUnknown() {
	xxx_messageInfo_Foreman.DiscardUnknown(m)
}

var xxx_messageInfo_Foreman proto.InternalMessageInfo

func (m *Foreman) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *Foreman) GetPlumberClusterId() string {
	if m != nil {
		return m.PlumberClusterId
	}
	return ""
}

func (m *Foreman) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

type SourceManager struct {
	AuthToken            string   `protobuf:"bytes,1,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"`
	SourceId             string   `protobuf:"bytes,2,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SourceManager) Reset()         { *m = SourceManager{} }
func (m *SourceManager) String() string { return proto.CompactTextString(m) }
func (*SourceManager) ProtoMessage()    {}
func (*SourceManager) Descriptor() ([]byte, []int) {
	return fileDescriptor_69536745fee4073a, []int{1}
}

func (m *SourceManager) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SourceManager.Unmarshal(m, b)
}
func (m *SourceManager) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SourceManager.Marshal(b, m, deterministic)
}
func (m *SourceManager) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SourceManager.Merge(m, src)
}
func (m *SourceManager) XXX_Size() int {
	return xxx_messageInfo_SourceManager.Size(m)
}
func (m *SourceManager) XXX_DiscardUnknown() {
	xxx_messageInfo_SourceManager.DiscardUnknown(m)
}

var xxx_messageInfo_SourceManager proto.InternalMessageInfo

func (m *SourceManager) GetAuthToken() string {
	if m != nil {
		return m.AuthToken
	}
	return ""
}

func (m *SourceManager) GetSourceId() string {
	if m != nil {
		return m.SourceId
	}
	return ""
}

type Auth struct {
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Filled out by batch. Not intended to be used by plumber.
	XForeman *Foreman `protobuf:"bytes,2,opt,name=_foreman,json=Foreman,proto3" json:"_foreman,omitempty"`
	// Filled out by batch. Not intended to be used by Plumber.
	XSourceManager       *SourceManager `protobuf:"bytes,3,opt,name=_source_manager,json=SourceManager,proto3" json:"_source_manager,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_69536745fee4073a, []int{2}
}

func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *Auth) GetXForeman() *Foreman {
	if m != nil {
		return m.XForeman
	}
	return nil
}

func (m *Auth) GetXSourceManager() *SourceManager {
	if m != nil {
		return m.XSourceManager
	}
	return nil
}

func init() {
	proto.RegisterType((*Foreman)(nil), "protos.common.Foreman")
	proto.RegisterType((*SourceManager)(nil), "protos.common.SourceManager")
	proto.RegisterType((*Auth)(nil), "protos.common.Auth")
}

func init() { proto.RegisterFile("ps_common_auth.proto", fileDescriptor_69536745fee4073a) }

var fileDescriptor_69536745fee4073a = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x90, 0xcb, 0x4b, 0xc4, 0x30,
	0x10, 0xc6, 0x59, 0x1f, 0xbb, 0xdb, 0x59, 0x16, 0x25, 0x2c, 0xba, 0xa0, 0x82, 0xf4, 0xe4, 0x41,
	0x1b, 0x5c, 0x8f, 0xe2, 0xc1, 0x07, 0x42, 0x11, 0x2f, 0xd5, 0x93, 0x97, 0x90, 0xa6, 0xb1, 0x29,
	0x36, 0x4d, 0xc9, 0xe3, 0x4f, 0xf1, 0xff, 0x95, 0x24, 0x45, 0xad, 0x17, 0x4f, 0x61, 0x66, 0x7e,
	0x5f, 0xbe, 0xf9, 0x06, 0x56, 0xbd, 0x21, 0x4c, 0x49, 0xa9, 0x3a, 0x42, 0x9d, 0x15, 0x59, 0xaf,
	0x95, 0x55, 0x68, 0x19, 0x1e, 0x93, 0xc5, 0x49, 0xaa, 0x60, 0xf6, 0xa8, 0x34, 0x97, 0xb4, 0x43,
	0x27, 0x00, 0x9e, 0x23, 0x56, 0x7d, 0xf0, 0x6e, 0x3d, 0x39, 0x9d, 0x9c, 0x25, 0x45, 0xe2, 0x3b,
	0xaf, 0xbe, 0x81, 0xce, 0x01, 0xf5, 0xad, 0x93, 0x25, 0xd7, 0x84, 0xb5, 0xce, 0x58, 0xae, 0x49,
	0x53, 0xad, 0xb7, 0x02, 0xb6, 0x3f, 0x4c, 0xee, 0xe3, 0x20, 0xaf, 0xd0, 0x21, 0xcc, 0x2c, 0xa7,
	0xd2, 0x23, 0xdb, 0x01, 0x99, 0xfa, 0x32, 0xaf, 0xd2, 0x27, 0x58, 0xbe, 0x28, 0xa7, 0x19, 0x7f,
	0xa6, 0x1d, 0xad, 0xb9, 0xfe, 0xcf, 0xf6, 0x08, 0x12, 0x13, 0xf8, 0x1f, 0xb7, 0x79, 0x6c, 0xe4,
	0x55, 0xfa, 0x39, 0x81, 0x9d, 0x5b, 0x67, 0x05, 0x5a, 0xc1, 0xee, 0x6f, 0x7d, 0x2c, 0xd0, 0x25,
	0xcc, 0xc9, 0x7b, 0x4c, 0x17, 0xa4, 0x8b, 0xcd, 0x41, 0x36, 0x8a, 0x9f, 0x0d, 0xd9, 0x8b, 0xef,
	0x23, 0x3c, 0xc0, 0x1e, 0x19, 0xfc, 0x64, 0x5c, 0x30, 0xec, 0xbf, 0xd8, 0x1c, 0xff, 0x51, 0x8e,
	0x42, 0x14, 0xe3, 0x4c, 0x77, 0x37, 0x6f, 0xd7, 0x75, 0x63, 0x85, 0x2b, 0x3d, 0x8d, 0x4b, 0x6a,
	0x99, 0x60, 0x4a, 0xf7, 0x78, 0x38, 0xd3, 0x85, 0x61, 0x82, 0x4b, 0x6a, 0x70, 0xe9, 0x9a, 0xb6,
	0xc2, 0xb5, 0xc2, 0xf1, 0x6f, 0x1c, 0xff, 0x2e, 0xa7, 0xa1, 0xbc, 0xfa, 0x0a, 0x00, 0x00, 0xff,
	0xff, 0x05, 0xde, 0x7a, 0xe4, 0xc2, 0x01, 0x00, 0x00,
}
