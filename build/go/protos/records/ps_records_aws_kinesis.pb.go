// Code generated by protoc-gen-go. DO NOT EDIT.
// source: records/ps_records_aws_kinesis.proto

package records

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AWSKinesis struct {
	PartitionKey         string   `protobuf:"bytes,1,opt,name=partition_key,json=partitionKey,proto3" json:"partition_key,omitempty"`
	SequenceNumber       string   `protobuf:"bytes,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	EncryptionType       string   `protobuf:"bytes,3,opt,name=encryption_type,json=encryptionType,proto3" json:"encryption_type,omitempty"`
	ShardId              string   `protobuf:"bytes,4,opt,name=shard_id,json=shardId,proto3" json:"shard_id,omitempty"`
	Value                []byte   `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AWSKinesis) Reset()         { *m = AWSKinesis{} }
func (m *AWSKinesis) String() string { return proto.CompactTextString(m) }
func (*AWSKinesis) ProtoMessage()    {}
func (*AWSKinesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_2175e9a738d05407, []int{0}
}

func (m *AWSKinesis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AWSKinesis.Unmarshal(m, b)
}
func (m *AWSKinesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AWSKinesis.Marshal(b, m, deterministic)
}
func (m *AWSKinesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AWSKinesis.Merge(m, src)
}
func (m *AWSKinesis) XXX_Size() int {
	return xxx_messageInfo_AWSKinesis.Size(m)
}
func (m *AWSKinesis) XXX_DiscardUnknown() {
	xxx_messageInfo_AWSKinesis.DiscardUnknown(m)
}

var xxx_messageInfo_AWSKinesis proto.InternalMessageInfo

func (m *AWSKinesis) GetPartitionKey() string {
	if m != nil {
		return m.PartitionKey
	}
	return ""
}

func (m *AWSKinesis) GetSequenceNumber() string {
	if m != nil {
		return m.SequenceNumber
	}
	return ""
}

func (m *AWSKinesis) GetEncryptionType() string {
	if m != nil {
		return m.EncryptionType
	}
	return ""
}

func (m *AWSKinesis) GetShardId() string {
	if m != nil {
		return m.ShardId
	}
	return ""
}

func (m *AWSKinesis) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

func init() {
	proto.RegisterType((*AWSKinesis)(nil), "protos.records.AWSKinesis")
}

func init() {
	proto.RegisterFile("records/ps_records_aws_kinesis.proto", fileDescriptor_2175e9a738d05407)
}

var fileDescriptor_2175e9a738d05407 = []byte{
	// 244 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x8f, 0x4d, 0x4b, 0x03, 0x31,
	0x10, 0x86, 0x59, 0xb5, 0x7e, 0x84, 0x5a, 0x21, 0x78, 0x88, 0xb7, 0xa2, 0x82, 0xbd, 0xd8, 0x1c,
	0xbc, 0x8a, 0xa0, 0x37, 0x29, 0x78, 0xa8, 0x82, 0xe0, 0x25, 0xe4, 0x63, 0xe8, 0x86, 0xee, 0x26,
	0x31, 0x93, 0x28, 0xf9, 0x5f, 0xfe, 0x40, 0x31, 0xbb, 0xea, 0x69, 0xe6, 0x7d, 0x78, 0x98, 0xe1,
	0x25, 0x97, 0x11, 0xb4, 0x8f, 0x06, 0x79, 0x40, 0x31, 0xae, 0x42, 0x7e, 0xa2, 0xd8, 0x5a, 0x07,
	0x68, 0x71, 0x19, 0xa2, 0x4f, 0x9e, 0xce, 0xea, 0xc0, 0xe5, 0x68, 0x9c, 0x7f, 0x35, 0x84, 0xdc,
	0xbf, 0x3e, 0xaf, 0x06, 0x89, 0x5e, 0x90, 0xe3, 0x20, 0x63, 0xb2, 0xc9, 0x7a, 0x27, 0xb6, 0x50,
	0x58, 0x33, 0x6f, 0x16, 0x47, 0xeb, 0xe9, 0x1f, 0x5c, 0x41, 0xa1, 0x57, 0xe4, 0x04, 0xe1, 0x3d,
	0x83, 0xd3, 0x20, 0x5c, 0xee, 0x15, 0x44, 0xb6, 0x53, 0xb5, 0xd9, 0x2f, 0x7e, 0xaa, 0xf4, 0x47,
	0x04, 0xa7, 0x63, 0x09, 0xf5, 0x5c, 0x2a, 0x01, 0xd8, 0xee, 0x20, 0xfe, 0xe3, 0x97, 0x12, 0x80,
	0x9e, 0x91, 0x43, 0x6c, 0x65, 0x34, 0xc2, 0x1a, 0xb6, 0x57, 0x8d, 0x83, 0x9a, 0x1f, 0x0d, 0x3d,
	0x25, 0x93, 0x0f, 0xd9, 0x65, 0x60, 0x93, 0x79, 0xb3, 0x98, 0xae, 0x87, 0xf0, 0x70, 0xf7, 0x76,
	0xbb, 0xb1, 0xa9, 0xcd, 0x6a, 0xa9, 0x7d, 0xcf, 0x95, 0x4c, 0xba, 0xd5, 0x3e, 0x06, 0x1e, 0xba,
	0xfa, 0xf9, 0x1a, 0x75, 0x0b, 0xbd, 0x44, 0xae, 0xb2, 0xed, 0x0c, 0xdf, 0x78, 0x3e, 0xd4, 0xe6,
	0x63, 0x6d, 0xb5, 0x5f, 0xf3, 0xcd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x74, 0x18, 0xe4, 0xfa,
	0x35, 0x01, 0x00, 0x00,
}
