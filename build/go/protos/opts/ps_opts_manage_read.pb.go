// Code generated by protoc-gen-go. DO NOT EDIT.
// source: opts/ps_opts_manage_read.proto

package opts

import (
	fmt "fmt"
	args "github.com/batchcorp/plumber-schemas/build/go/protos/args"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateReadOptions struct {
	// @gotags: kong:"help='ID of the connection to use',required"
	ConnectionId string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty" kong:"help='ID of the connection to use',required"`
	// @gotags: kong:"help='Friendly name for the source',required"
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" kong:"help='Friendly name for the source',required"`
	// @gotags: kong:"help='Notes to attach to the source'"
	Notes string `protobuf:"bytes,3,opt,name=notes,proto3" json:"notes,omitempty" kong:"help='Notes to attach to the source'"`
	// @gotags: kong:"cmd,help='Apache Kafka'"
	Kafka *args.KafkaReadArgs `protobuf:"bytes,100,opt,name=kafka,proto3" json:"kafka,omitempty" kong:"cmd,help='Apache Kafka'"`
	// @gotags: kong:"cmd,help='AWS Simple Queue System'"
	AwsSqs *args.AWSSQSReadArgs `protobuf:"bytes,101,opt,name=aws_sqs,json=awsSqs,proto3" json:"aws_sqs,omitempty" kong:"cmd,help='AWS Simple Queue System'"`
	// @gotags: kong:"cmd,help='MongoDB (CDC)'"
	Mongo *args.MongoReadArgs `protobuf:"bytes,102,opt,name=mongo,proto3" json:"mongo,omitempty" kong:"cmd,help='MongoDB (CDC)'"`
	// @gotags: kong:"cmd,help='NSQ'"
	Nsq *args.NSQReadArgs `protobuf:"bytes,103,opt,name=nsq,proto3" json:"nsq,omitempty" kong:"cmd,help='NSQ'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Rabbit *args.RabbitReadArgs `protobuf:"bytes,104,opt,name=rabbit,proto3" json:"rabbit,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='MQTT'"
	Mqtt *args.MQTTReadArgs `protobuf:"bytes,105,opt,name=mqtt,proto3" json:"mqtt,omitempty" kong:"cmd,help='MQTT'"`
	// @gotags: kong:"cmd,help='Azure Service Bus'"
	AzureServiceBus *args.AzureServiceBusReadArgs `protobuf:"bytes,106,opt,name=azure_service_bus,json=azureServiceBus,proto3" json:"azure_service_bus,omitempty" kong:"cmd,help='Azure Service Bus'"`
	// @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
	GcpPubsub *args.GCPPubSubReadArgs `protobuf:"bytes,107,opt,name=gcp_pubsub,json=gcpPubsub,proto3" json:"gcp_pubsub,omitempty" kong:"cmd,help='Google Cloud Platform Pub/Sub'"`
	// @gotags: kong:"cmd,help='KubeMQ Queue'"
	KubemqQueue *args.KubeMQQueueReadArgs `protobuf:"bytes,108,opt,name=kubemq_queue,json=kubemqQueue,proto3" json:"kubemq_queue,omitempty" kong:"cmd,help='KubeMQ Queue'"`
	// @gotags: kong:"cmd,help='Redis PubSub'"
	RedisPubsub *args.RedisPubSubReadArgs `protobuf:"bytes,109,opt,name=redis_pubsub,json=redisPubsub,proto3" json:"redis_pubsub,omitempty" kong:"cmd,help='Redis PubSub'"`
	// @gotags: kong:"cmd,help='Redis Streams'"
	RedisStreams *args.RedisStreamsReadArgs `protobuf:"bytes,111,opt,name=redis_streams,json=redisStreams,proto3" json:"redis_streams,omitempty" kong:"cmd,help='Redis Streams'"`
	// @gotags: kong:"cmd,help='PostgreSQL (CDC)'"
	Postgres *args.PostgresReadArgs `protobuf:"bytes,112,opt,name=postgres,proto3" json:"postgres,omitempty" kong:"cmd,help='PostgreSQL (CDC)'"`
	// @gotags: kong:"cmd,help='NATS'"
	Nats *args.NatsReadArgs `protobuf:"bytes,113,opt,name=nats,proto3" json:"nats,omitempty" kong:"cmd,help='NATS'"`
	// @gotags: kong:"cmd,help='NATS Streaming'"
	NatsStreaming *args.NatsStreamingReadArgs `protobuf:"bytes,114,opt,name=nats_streaming,json=natsStreaming,proto3" json:"nats_streaming,omitempty" kong:"cmd,help='NATS Streaming'"`
	// @gotags: kong:"cmd,help='NATS JetStream'"
	NatsJetstream        *args.NatsJetstreamReadArgs `protobuf:"bytes,115,opt,name=nats_jetstream,json=natsJetstream,proto3" json:"nats_jetstream,omitempty" kong:"cmd,help='NATS JetStream'"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *CreateReadOptions) Reset()         { *m = CreateReadOptions{} }
func (m *CreateReadOptions) String() string { return proto.CompactTextString(m) }
func (*CreateReadOptions) ProtoMessage()    {}
func (*CreateReadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_5affa650805f1dcd, []int{0}
}

func (m *CreateReadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReadOptions.Unmarshal(m, b)
}
func (m *CreateReadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReadOptions.Marshal(b, m, deterministic)
}
func (m *CreateReadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReadOptions.Merge(m, src)
}
func (m *CreateReadOptions) XXX_Size() int {
	return xxx_messageInfo_CreateReadOptions.Size(m)
}
func (m *CreateReadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReadOptions proto.InternalMessageInfo

func (m *CreateReadOptions) GetConnectionId() string {
	if m != nil {
		return m.ConnectionId
	}
	return ""
}

func (m *CreateReadOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateReadOptions) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

func (m *CreateReadOptions) GetKafka() *args.KafkaReadArgs {
	if m != nil {
		return m.Kafka
	}
	return nil
}

func (m *CreateReadOptions) GetAwsSqs() *args.AWSSQSReadArgs {
	if m != nil {
		return m.AwsSqs
	}
	return nil
}

func (m *CreateReadOptions) GetMongo() *args.MongoReadArgs {
	if m != nil {
		return m.Mongo
	}
	return nil
}

func (m *CreateReadOptions) GetNsq() *args.NSQReadArgs {
	if m != nil {
		return m.Nsq
	}
	return nil
}

func (m *CreateReadOptions) GetRabbit() *args.RabbitReadArgs {
	if m != nil {
		return m.Rabbit
	}
	return nil
}

func (m *CreateReadOptions) GetMqtt() *args.MQTTReadArgs {
	if m != nil {
		return m.Mqtt
	}
	return nil
}

func (m *CreateReadOptions) GetAzureServiceBus() *args.AzureServiceBusReadArgs {
	if m != nil {
		return m.AzureServiceBus
	}
	return nil
}

func (m *CreateReadOptions) GetGcpPubsub() *args.GCPPubSubReadArgs {
	if m != nil {
		return m.GcpPubsub
	}
	return nil
}

func (m *CreateReadOptions) GetKubemqQueue() *args.KubeMQQueueReadArgs {
	if m != nil {
		return m.KubemqQueue
	}
	return nil
}

func (m *CreateReadOptions) GetRedisPubsub() *args.RedisPubSubReadArgs {
	if m != nil {
		return m.RedisPubsub
	}
	return nil
}

func (m *CreateReadOptions) GetRedisStreams() *args.RedisStreamsReadArgs {
	if m != nil {
		return m.RedisStreams
	}
	return nil
}

func (m *CreateReadOptions) GetPostgres() *args.PostgresReadArgs {
	if m != nil {
		return m.Postgres
	}
	return nil
}

func (m *CreateReadOptions) GetNats() *args.NatsReadArgs {
	if m != nil {
		return m.Nats
	}
	return nil
}

func (m *CreateReadOptions) GetNatsStreaming() *args.NatsStreamingReadArgs {
	if m != nil {
		return m.NatsStreaming
	}
	return nil
}

func (m *CreateReadOptions) GetNatsJetstream() *args.NatsJetstreamReadArgs {
	if m != nil {
		return m.NatsJetstream
	}
	return nil
}

type GetReadOptions struct {
	// @gotags: kong:"help='ID of the read resource to get (leave empty to get all)'"
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" kong:"help='ID of the read resource to get (leave empty to get all)'"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetReadOptions) Reset()         { *m = GetReadOptions{} }
func (m *GetReadOptions) String() string { return proto.CompactTextString(m) }
func (*GetReadOptions) ProtoMessage()    {}
func (*GetReadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_5affa650805f1dcd, []int{1}
}

func (m *GetReadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetReadOptions.Unmarshal(m, b)
}
func (m *GetReadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetReadOptions.Marshal(b, m, deterministic)
}
func (m *GetReadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetReadOptions.Merge(m, src)
}
func (m *GetReadOptions) XXX_Size() int {
	return xxx_messageInfo_GetReadOptions.Size(m)
}
func (m *GetReadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_GetReadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_GetReadOptions proto.InternalMessageInfo

func (m *GetReadOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteReadOptions struct {
	// @gotags: kong:"help='ID of the read resource to delete',required=true"
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" kong:"help='ID of the read resource to delete',required=true"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReadOptions) Reset()         { *m = DeleteReadOptions{} }
func (m *DeleteReadOptions) String() string { return proto.CompactTextString(m) }
func (*DeleteReadOptions) ProtoMessage()    {}
func (*DeleteReadOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_5affa650805f1dcd, []int{2}
}

func (m *DeleteReadOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReadOptions.Unmarshal(m, b)
}
func (m *DeleteReadOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReadOptions.Marshal(b, m, deterministic)
}
func (m *DeleteReadOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReadOptions.Merge(m, src)
}
func (m *DeleteReadOptions) XXX_Size() int {
	return xxx_messageInfo_DeleteReadOptions.Size(m)
}
func (m *DeleteReadOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReadOptions.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReadOptions proto.InternalMessageInfo

func (m *DeleteReadOptions) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateReadOptions)(nil), "protos.opts.CreateReadOptions")
	proto.RegisterType((*GetReadOptions)(nil), "protos.opts.GetReadOptions")
	proto.RegisterType((*DeleteReadOptions)(nil), "protos.opts.DeleteReadOptions")
}

func init() { proto.RegisterFile("opts/ps_opts_manage_read.proto", fileDescriptor_5affa650805f1dcd) }

var fileDescriptor_5affa650805f1dcd = []byte{
	// 664 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x95, 0x5d, 0x4f, 0xdb, 0x3e,
	0x14, 0xc6, 0xc5, 0xfb, 0x1f, 0x17, 0xf8, 0x0b, 0x6b, 0xda, 0x4c, 0x11, 0xac, 0x14, 0x2e, 0xd0,
	0x24, 0x9a, 0x69, 0xec, 0x06, 0x4d, 0xbb, 0x00, 0xa6, 0x21, 0x36, 0xc1, 0xda, 0x06, 0x69, 0xd2,
	0x6e, 0x22, 0x3b, 0x39, 0xa4, 0x81, 0xe6, 0xcd, 0x2f, 0x43, 0xda, 0x97, 0xde, 0x57, 0x98, 0xec,
	0xa4, 0x6e, 0x4d, 0xc3, 0x55, 0x9a, 0xf3, 0xfc, 0x9e, 0xc7, 0x47, 0xb6, 0x4f, 0x8a, 0xf6, 0xf3,
	0x42, 0x0a, 0xaf, 0x10, 0x81, 0x7e, 0x06, 0x29, 0xcd, 0x68, 0x0c, 0x01, 0x07, 0x1a, 0xf5, 0x0a,
	0x9e, 0xcb, 0x1c, 0xb7, 0xcc, 0x43, 0xf4, 0xb4, 0xdc, 0x6e, 0x53, 0x1e, 0x1b, 0x58, 0x3f, 0x03,
	0xfa, 0x24, 0x02, 0x51, 0x8a, 0x0a, 0x6c, 0x1f, 0xb9, 0xda, 0x1f, 0xc5, 0x21, 0x10, 0xc0, 0x7f,
	0x27, 0x21, 0x04, 0x4c, 0x4d, 0xa8, 0x3d, 0x87, 0x8a, 0xc3, 0x22, 0x28, 0x14, 0x13, 0x8a, 0xd5,
	0x32, 0x71, 0xe4, 0x47, 0x7a, 0xff, 0x48, 0x6b, 0xe5, 0xad, 0xab, 0x28, 0x06, 0x69, 0x19, 0x94,
	0x0a, 0x14, 0x34, 0x5a, 0xd3, 0x3c, 0x8b, 0xf3, 0x5a, 0x79, 0xe3, 0x2a, 0xa5, 0x94, 0x8d, 0x42,
	0x46, 0xe5, 0xa4, 0xcb, 0x83, 0x39, 0x21, 0x78, 0x00, 0x29, 0x24, 0x07, 0x9a, 0xbe, 0x8c, 0x54,
	0x7a, 0x92, 0xc5, 0x35, 0xf2, 0xda, 0x45, 0x44, 0x59, 0xd7, 0x77, 0x9d, 0x7a, 0x91, 0x0b, 0x19,
	0x73, 0x98, 0x2c, 0xbd, 0xe3, 0x88, 0x9c, 0x32, 0x96, 0xc8, 0xc6, 0x2d, 0xe0, 0x10, 0x25, 0xc2,
	0xdd, 0xbd, 0x4e, 0x03, 0x50, 0x35, 0x55, 0xa7, 0x77, 0xff, 0xae, 0xa1, 0xed, 0x4b, 0x0e, 0x54,
	0xc2, 0x10, 0x68, 0xf4, 0xa3, 0x90, 0x49, 0x9e, 0x09, 0x7c, 0x88, 0x36, 0xc3, 0x3c, 0xcb, 0x20,
	0xd4, 0xaf, 0x41, 0x12, 0x91, 0x85, 0xce, 0xc2, 0xf1, 0xfa, 0x70, 0x63, 0x5a, 0xbc, 0x8e, 0x30,
	0x46, 0xcb, 0x19, 0x4d, 0x81, 0x2c, 0x1a, 0xcd, 0xfc, 0xc6, 0xaf, 0xd0, 0x4a, 0x96, 0x4b, 0x10,
	0x64, 0xc9, 0x14, 0xab, 0x17, 0xfc, 0x1e, 0xad, 0x98, 0x93, 0x23, 0x51, 0x67, 0xe1, 0xb8, 0xf5,
	0xa1, 0xdd, 0xab, 0xaf, 0x90, 0xee, 0xaa, 0xf7, 0x5d, 0x2b, 0x7a, 0xf1, 0x73, 0x1e, 0x8b, 0x61,
	0x05, 0xe2, 0x8f, 0x68, 0xad, 0xbe, 0x4c, 0x04, 0x8c, 0x67, 0xd7, 0xf1, 0x9c, 0xff, 0xf4, 0xfd,
	0x81, 0x6f, 0x4d, 0xab, 0xf4, 0x49, 0xf8, 0xa5, 0x59, 0xc7, 0x1c, 0x33, 0xb9, 0x6f, 0x58, 0xe7,
	0x46, 0x2b, 0xd3, 0x75, 0x0c, 0x88, 0xdf, 0xa1, 0xa5, 0x4c, 0x94, 0x24, 0x36, 0x3c, 0x71, 0xf8,
	0x5b, 0x7f, 0x60, 0x69, 0x0d, 0xe1, 0x53, 0xb4, 0x5a, 0xed, 0x3e, 0x19, 0x35, 0xb4, 0x34, 0x34,
	0xd2, 0xb4, 0xa5, 0x0a, 0xc5, 0x27, 0x68, 0x59, 0xdf, 0x2f, 0x92, 0x18, 0xcb, 0x8e, 0xdb, 0xd1,
	0xe0, 0xee, 0xce, 0x1a, 0x0c, 0x86, 0xfb, 0x68, 0x7b, 0x6e, 0x50, 0xc8, 0x83, 0xf1, 0x1e, 0xb9,
	0x3b, 0xa0, 0x29, 0xbf, 0x82, 0x2e, 0x94, 0xb0, 0x31, 0xff, 0x53, 0x57, 0xc0, 0x9f, 0x11, 0x9a,
	0x0e, 0x15, 0x79, 0x34, 0x51, 0xfb, 0x4e, 0xd4, 0xd5, 0x65, 0xbf, 0xaf, 0x98, 0xaf, 0x98, 0x0d,
	0x59, 0x8f, 0xc3, 0xa2, 0x6f, 0x0c, 0xf8, 0x12, 0x6d, 0xcc, 0x8e, 0x16, 0x19, 0x9b, 0x80, 0x8e,
	0x7b, 0x82, 0x8a, 0xc1, 0xcd, 0x60, 0xa0, 0x75, 0x1b, 0xd1, 0xaa, 0x5c, 0xa6, 0xa8, 0x43, 0x66,
	0x2f, 0x27, 0x49, 0x1b, 0x42, 0x86, 0x1a, 0x78, 0xd6, 0x47, 0x8b, 0xd7, 0x45, 0xdd, 0xc9, 0x57,
	0xb4, 0xe9, 0x5c, 0x60, 0x92, 0x9b, 0x94, 0x83, 0xf9, 0x14, 0xbf, 0x02, 0x6c, 0x4c, 0xb5, 0x78,
	0x5d, 0xc5, 0x67, 0xe8, 0xbf, 0xc9, 0x84, 0x91, 0xc2, 0x44, 0xec, 0x39, 0x11, 0xfd, 0x5a, 0xb4,
	0x76, 0x8b, 0xeb, 0xc3, 0xd4, 0x73, 0x4d, 0xca, 0x86, 0xc3, 0xbc, 0xa5, 0x72, 0x6a, 0x31, 0x18,
	0xbe, 0x46, 0x5b, 0xee, 0x67, 0x80, 0x70, 0x63, 0xec, 0xce, 0x19, 0xfd, 0x09, 0x61, 0x13, 0x36,
	0xb3, 0xd9, 0xb2, 0x8d, 0xb2, 0x1f, 0x1d, 0x22, 0x5e, 0x88, 0xfa, 0x36, 0x21, 0xdc, 0x28, 0x5b,
	0xee, 0x76, 0xd0, 0xd6, 0x15, 0xc8, 0xd9, 0x69, 0xdf, 0x42, 0x8b, 0x76, 0xc4, 0x17, 0x93, 0xa8,
	0x7b, 0x88, 0xb6, 0xbf, 0xc0, 0x18, 0xdc, 0x4f, 0xc2, 0x33, 0xe8, 0xe2, 0xd3, 0xaf, 0xb3, 0x38,
	0x91, 0x23, 0xc5, 0x7a, 0x61, 0x9e, 0x7a, 0x8c, 0xca, 0x70, 0x14, 0xe6, 0xbc, 0xf0, 0x8a, 0xb1,
	0x4a, 0x19, 0xf0, 0x13, 0x11, 0x8e, 0x20, 0xa5, 0xc2, 0x63, 0x2a, 0x19, 0x47, 0x5e, 0x9c, 0x7b,
	0x55, 0xa3, 0x9e, 0xfe, 0xdb, 0x60, 0xab, 0xe6, 0xe5, 0xf4, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x6a, 0xc5, 0xc9, 0x96, 0x6c, 0x06, 0x00, 0x00,
}
