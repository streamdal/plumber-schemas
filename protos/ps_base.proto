syntax = "proto3";

package protos;

import "ps_connect.proto";
import "ps_relay.proto";
import "ps_server.proto";
import "ps_tunnel.proto";

option go_package = "github.com/streamdal/plumber-schemas/build/go/protos";

service PlumberServer {
  // IMPORTANT!
  // Any changes to methods in this service must be duplicated to ps_foreman_server.proto:ForemanServer
  // IMPORTANT!

  // -------------------- Connection ---------------------

  // List configured/known connections
  rpc GetAllConnections (GetAllConnectionsRequest) returns (GetAllConnectionsResponse);

  // Fetch a specific connection by ID
  rpc GetConnection(GetConnectionRequest) returns (GetConnectionResponse);

  // Create a connection in plumber
  rpc CreateConnection(CreateConnectionRequest) returns (CreateConnectionResponse);

  // Test a connection before saving its configuration
  rpc TestConnection(TestConnectionRequest) returns (TestConnectionResponse);

  // Any active connections will be restarted
  rpc UpdateConnection(UpdateConnectionRequest) returns (UpdateConnectionResponse);

  // If there are any active connections, delete will cause them to get closed
  rpc DeleteConnection(DeleteConnectionRequest) returns (DeleteConnectionResponse);

  // ---------------------- Relay ----------------------

  rpc GetAllRelays(GetAllRelaysRequest) returns (GetAllRelaysResponse);

  rpc GetRelay(GetRelayRequest) returns (GetRelayResponse);

  rpc CreateRelay(CreateRelayRequest) returns (CreateRelayResponse);

  rpc UpdateRelay(UpdateRelayRequest) returns (UpdateRelayResponse);

  rpc ResumeRelay(ResumeRelayRequest) returns (ResumeRelayResponse);

  rpc StopRelay(StopRelayRequest) returns (StopRelayResponse);

  rpc DeleteRelay(DeleteRelayRequest) returns (DeleteRelayResponse);

  // --------------------- Tunnel ---------------------

  rpc GetTunnel(GetTunnelRequest) returns (GetTunnelResponse);

  rpc GetAllTunnels(GetAllTunnelsRequest) returns (GetAllTunnelsResponse);

  rpc CreateTunnel(CreateTunnelRequest) returns (CreateTunnelResponse);

  rpc StopTunnel(StopTunnelRequest) returns (StopTunnelResponse);

  rpc ResumeTunnel(ResumeTunnelRequest) returns (ResumeTunnelResponse);

  rpc UpdateTunnel(UpdateTunnelRequest) returns (UpdateTunnelResponse);

  rpc DeleteTunnel(DeleteTunnelRequest) returns (DeleteTunnelResponse);

  // ------------------- Server -------------------

  rpc GetServerOptions(GetServerOptionsRequest) returns (GetServerOptionsResponse);
}
