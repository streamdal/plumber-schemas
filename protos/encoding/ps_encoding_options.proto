// The encoding proto schema is intended to be used for either encoding or
// decoding. The intent of whether to encode or decode should be specified
// somewhere outside of this proto.

syntax = "proto3";

package protos.encoding;

option go_package = "github.com/streamdal/plumber-schemas/build/go/protos/encoding";

enum EncodeType {
  ENCODE_TYPE_UNSET  = 0;
  ENCODE_TYPE_JSONPB = 1;
  ENCODE_TYPE_AVRO   = 2;
  ENCODE_TYPE_CLOUDEVENT = 3;
}

enum DecodeType {
  DECODE_TYPE_UNSET      = 0;
  DECODE_TYPE_PROTOBUF   = 1;
  DECODE_TYPE_AVRO       = 2;
  DECODE_TYPE_THRIFT     = 3;
  DECODE_TYPE_FLATBUFFER = 4;
}

enum EnvelopeType {
  ENVELOPE_TYPE_UNSET = 0;
  ENVELOPE_TYPE_DEEP = 1;
  ENVELOPE_TYPE_SHALLOW = 2;
}

message ProtobufSettings {
  // @gotags: kong:"help='Input message(s) should be encoded with this message envelope'"
  string protobuf_root_message = 1;

  // Desktop/server should not use this.
  // @gotags: kong:"help='One or more directories which contains protobuf schemas',existingdir"
  repeated string protobuf_dirs = 2;

  // Directory where protos are stored (used for github import)
  // @gotags: kong:"-"
  string _protobuf_root_dir = 3;

  // Used by server/desktop when creating a read without an existing schema
  // @gotags: kong:"-"
  bytes archive = 4;

  // Used internally by the server
  // @gotags: kong:"-"
  bytes _message_descriptor = 5;

  // @gotags: kong:"help='Envelope type (options: deep, shallow)',type=pbenum,pbenum_strip_prefix=ENVELOPE_TYPE_,pbenum_lowercase,default=deep"
  EnvelopeType protobuf_envelope_type = 6;

  // @gotags: kong:"help='For shallow envelope messages, the payload field should be encoded with this message name'"
  string shallow_envelope_message = 7;

  // @gotags: kong:"help='For shallow envelope messages, the field number of the root message that contains the shallow envelope payload'"
  int32 shallow_envelope_field_number = 8;

  // Used internally by the server
  // @gotags: kong:"-"
  bytes _shallow_envelope_message_descriptor = 9;

  // @gotags: kong:"help='Protobuf descriptor set(.protoset or .fds file)'"
  string protobuf_descriptor_set = 10;
}

message AvroSettings {
  // Used by CLI; desktop should not set/use this.
  // @gotags: kong:"help='If encode-type is set to avro, must specify avro schema file',existingfile"
  string avro_schema_file = 1;

  // Used by desktop; CLI should not set/use this.
  // @gotags: kong:"-"
  bytes schema = 2;
}

message ThriftSettings {
  // @gotags: kong:"help='One or more directories containing Thrift IDL files'"
  repeated string thrift_dirs = 1;

  // @gotags: kong:"help='Namespace and struct name to decode the message with. Ex: com.mycompany.Account'"
  string thrift_struct = 2;
}

message JSONSchemaSettings {
  // Used by desktop; CLI should not set/use this.
  // @gotags: kong:"-"
  bytes schema = 1;
}

message CloudEventSettings {
  // @gotags: kong:"help='ID to give cloud event. If left blank, plumber will auto-generate a random UUIDv4'"
  string ce_id = 1;

  // @gotags: kong:"help='Source for cloud event',default='plumber'"
  string ce_source = 2;

  // @gotags: kong:"help='Cloud event type'"
  string ce_type = 3;

  // @gotags: kong:"help='Cloud event subject'"
  string ce_subject = 4;

  // @gotags: kong:"help='Cloud event specification version, ex: 0.1, 0.2, 0.3, 1.0',default='1.0'"
  string ce_spec_version = 5;

  // @gotags: kong:"help='Type of encoding of the event data',default='application/json; charset=utf-8'"
  string ce_data_content_type = 6;

  // @gotags: kong:"help='Path to JSON schema file for the cloud event'"
  string ce_data_schema = 7;
}

message EncodeOptions {
  // Use an existing schema for encoding (and ignore all other encode settings)
  // @gotags: kong:"-"
  string schema_id = 1;

  // @gotags: kong:"help='Encode type (options: unset, jsonpb, avro)',default=unset,type=pbenum,pbenum_strip_prefix=ENCODE_TYPE_,pbenum_lowercase"
  EncodeType encode_type = 2;

  // @gotags: kong:"embed,group=protobuf"
  ProtobufSettings protobuf_settings = 3;

  // @gotags: kong:"embed,group=avro"
  AvroSettings avro_settings = 4;

  // @gotags: kong:"embed,group=cloudevent"
  CloudEventSettings cloudevent_settings = 5;
}

message DecodeOptions {
  // Use an existing schema for decoding (and ignore all other decode settings)
  // @gotags: kong:"-"
  string schema_id = 1;

  // @gotags: kong:"help='Decode type (options: unset, protobuf, avro, thrift, flatbuffer)',type=pbenum,pbenum_strip_prefix=DECODE_TYPE_,pbenum_lowercase,default=unset"
  DecodeType decode_type = 2;

  // @gotags: kong:"embed,group=protobuf"
  ProtobufSettings protobuf_settings = 3;

  // @gotags: kong:"embed,group=avro"
  AvroSettings avro_settings = 4;

  // @gotags: kong:"embed,group=thrift"
  ThriftSettings thrift_settings = 5;
}
