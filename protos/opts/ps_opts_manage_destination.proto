syntax = "proto3";

package protos.opts;

import "args/ps_args_activemq.proto";
import "args/ps_args_aws_kinesis.proto";
import "args/ps_args_aws_sns.proto";
import "args/ps_args_aws_sqs.proto";
import "args/ps_args_azure_event_hub.proto";
import "args/ps_args_azure_service_bus.proto";
import "args/ps_args_gcp_pubsub.proto";
import "args/ps_args_kafka.proto";
import "args/ps_args_kubemq_queue.proto";
import "args/ps_args_memphis.proto";
import "args/ps_args_mqtt.proto";
import "args/ps_args_nats.proto";
import "args/ps_args_nats_jetstream.proto";
import "args/ps_args_nats_streaming.proto";
import "args/ps_args_nsq.proto";
import "args/ps_args_pulsar.proto";
import "args/ps_args_rabbit.proto";
import "args/ps_args_rabbit_streams.proto";
import "args/ps_args_redis_pubsub.proto";
import "args/ps_args_redis_streams.proto";

message CreateDestinationOptions {
  // @gotags: kong:"help='ID of the underlying connection',required"
  string connection_id = 1;

  // @gotags: kong:"help='Friendly name for the connection',required"
  string name = 2;

  // @gotags: kong:"help='Optional notes to associate with the connection'"
  string notes = 3;

  // --------------------------------------------------------------------- //
  //                       SUPPORTED BACKENDS (100-999)                    //
  // --------------------------------------------------------------------- //

  // @gotags: kong:"cmd,help='Apache Kafka'"
  args.KafkaWriteArgs kafka = 100;

  // @gotags: kong:"cmd,help='Apache ActiveMQ'"
  args.ActiveMQWriteArgs activemq = 101;

  // @gotags: kong:"cmd,help='AWS Simple Queue System'"
  args.AWSSQSWriteArgs aws_sqs = 102;

  // @gotags: kong:"cmd,help='AWS Simple Notification System'"
  args.AWSSNSWriteArgs aws_sns = 103;

  // @gotags: kong:"cmd,help='NATS'"
  args.NatsWriteArgs nats = 104;

  // @gotags: kong:"cmd,help='NATS Streaming'"
  args.NatsStreamingWriteArgs nats_streaming = 105;

  // @gotags: kong:"cmd,help='NSQ'"
  args.NSQWriteArgs nsq = 106;

  // @gotags: kong:"cmd,help='RabbitMQ'"
  args.RabbitWriteArgs rabbit = 107;

  // @gotags: kong:"cmd,help='MQTT'"
  args.MQTTWriteArgs mqtt = 108;

  // @gotags: kong:"cmd,help='Azure Service Bus'"
  args.AzureServiceBusWriteArgs azure_service_bus = 109;

  // @gotags: kong:"cmd,help='Azure Event Hub'"
  args.AzureEventHubWriteArgs azure_event_hub = 110;

  // @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
  args.GCPPubSubWriteArgs gcp_pubsub = 111;

  // @gotags: kong:"cmd,help='KubeMQ Queue'"
  args.KubeMQQueueWriteArgs kubemq_queue = 112;

  // @gotags: kong:"cmd,help='Redis PubSub'"
  args.RedisPubSubWriteArgs redis_pubsub = 113;

  // @gotags: kong:"cmd,help='Redis Streams'"
  args.RedisStreamsWriteArgs redis_streams = 114;

  // @gotags: kong:"cmd,help='Apache Pulsar'"
  args.PulsarWriteArgs pulsar = 115;

  // @gotags: kong:"cmd,help='RabbitMQ Streams'"
  args.RabbitStreamsWriteArgs rabbit_streams = 116;

  // @gotags: kong:"cmd,help='NATS JetStream'"
  args.NatsJetstreamWriteArgs nats_jetstream = 117;

  // @gotags: kong:"cmd,help='AWS Kinesis Streams'"
  args.AWSKinesisWriteArgs aws_kinesis = 118;

  // @gotags: kong:"cmd,help='Memphis'"
  args.MemphisWriteArgs memphis = 119;
}

message GetDestinationOptions {
  // @gotags: kong:"help='ID of the destination to get (leave empty to get all)'"
  string id = 1;
}


message DeleteDestinationOptions {
  // @gotags: kong:"help='ID of the destination to delete',required=true"
  string id = 1;
}
