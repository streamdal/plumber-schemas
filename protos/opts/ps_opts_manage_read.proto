syntax = "proto3";

package protos.opts;

import "args/ps_args_aws_sqs.proto";
import "args/ps_args_azure_service_bus.proto";
import "args/ps_args_gcp_pubsub.proto";
import "args/ps_args_kafka.proto";
import "args/ps_args_kubemq_queue.proto";
import "args/ps_args_mongo.proto";
import "args/ps_args_mqtt.proto";
import "args/ps_args_nats.proto";
import "args/ps_args_nats_jetstream.proto";
import "args/ps_args_nats_streaming.proto";
import "args/ps_args_nsq.proto";
import "args/ps_args_postgres.proto";
import "args/ps_args_rabbit.proto";
import "args/ps_args_redis_pubsub.proto";
import "args/ps_args_redis_streams.proto";
import "encoding/ps_encoding_options.proto";
import "opts/ps_opts_read.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos/opts";

message ExtraCreateChannelReadOptions {
  // @gotags: kong:"embed,group=sampling"
  ReadSampleOptions sample_options = 1;

  // @gotags: kong:"embed,group=decode"
  encoding.DecodeOptions decode_options = 2;

  // @gotags: kong:"help='Convert read data before it is written (options: unset; base64; gzip)',type=pbenum,pbenum_strip_prefix=CONVERT_OPTION_,pbenum_lowercase,default=unset"
  ConvertOption convert_option = 3;
}

message CreateChannelReadOptions {
  // @gotags: kong:"help='ID of the connection to use',required"
  string connection_id = 1;

  // @gotags: kong:"help='Friendly name for the source',required"
  string name = 2;

  // @gotags: kong:"help='Notes to attach to the source'"
  string notes = 3;

  // @gotags: kong:"embed"
  ExtraCreateChannelReadOptions extra_options = 4;

  // --------------------------------------------------------------------- //
  //                       SUPPORTED BACKENDS (100-999)                    //
  // --------------------------------------------------------------------- //

  // @gotags: kong:"cmd,help='Apache Kafka'"
  args.KafkaReadArgs kafka = 100;

  // @gotags: kong:"cmd,help='AWS Simple Queue System'"
  args.AWSSQSReadArgs aws_sqs = 101;

  // @gotags: kong:"cmd,help='MongoDB (CDC)'"
  args.MongoReadArgs mongo = 102;

  // @gotags: kong:"cmd,help='NSQ'"
  args.NSQReadArgs nsq = 103;

  // @gotags: kong:"cmd,help='MQTT'"
  args.RabbitReadArgs rabbit = 104;

  // @gotags: kong:"cmd,help='MQTT'"
  args.MQTTReadArgs mqtt = 105;

  // @gotags: kong:"cmd,help='Azure Service Bus'"
  args.AzureServiceBusReadArgs azure_service_bus = 106;

  // @gotags: kong:"cmd,help='Google Cloud Platform Pub/Sub'"
  args.GCPPubSubReadArgs gcp_pubsub = 107;

  // @gotags: kong:"cmd,help='KubeMQ Queue'"
  args.KubeMQQueueReadArgs kubemq_queue = 108;

  // @gotags: kong:"cmd,help='Redis PubSub'"
  args.RedisPubSubReadArgs redis_pubsub = 109;

  // @gotags: kong:"cmd,help='Redis Streams'"
  args.RedisStreamsReadArgs redis_streams = 111;

  // @gotags: kong:"cmd,help='PostgreSQL (CDC)'"
  args.PostgresReadArgs postgres = 112;

  // @gotags: kong:"cmd,help='NATS'"
  args.NatsReadArgs nats = 113;

  // @gotags: kong:"cmd,help='NATS Streaming'"
  args.NatsStreamingReadArgs nats_streaming = 114;

  // @gotags: kong:"cmd,help='NATS JetStream'"
  args.NatsJetstreamReadArgs nats_jetstream = 115;


  // --------------------------------------------------------------------- //
  //                       PRIVATE FIELDS (1000-1999)                      //
  // --------------------------------------------------------------------- //

  // @gotags: kong:"-"
  string _read_id = 1000;

  // @gotags: kong:"-"
  bool _active = 1001;
}

message GetReadOptions {
  // @gotags: kong:"help='ID of the read resource to get (leave empty to get all)'"
  string id = 1;
}


message DeleteReadOptions {
  // @gotags: kong:"help='ID of the read resource to delete',required=true"
  string id = 1;
}
