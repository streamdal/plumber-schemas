syntax = "proto3";

package protos;

import "common/ps_common_auth.proto";
import "common/ps_common_status.proto";
import "opts/ps_opts_manage_channel.proto";
import "opts/ps_opts_relay.proto";

option go_package = "github.com/batchcorp/plumber-schemas/build/go/protos";

message GetAllChannelsRequest {
  // Every gRPC request must have a valid auth config
  common.Auth auth = 9999;
}

message GetAllChannelsResponse {
  common.Status status = 1000;

  // Will be set as empty []Relay if no relays are configured
  repeated opts.CreateChannelOptions opts = 1;
}

///////////////////////////////////////////////////////////////////////////////

message GetChannelRequest {
  // Every gRPC request must have a valid auth config
  common.Auth auth = 9999;

  string channel_id = 1;
}

message GetChannelResponse {
  common.Status status = 1000;

  opts.CreateChannelOptions opts = 1;
}

///////////////////////////////////////////////////////////////////////////////

message CreateChannelRequest {
  // Every gRPC request must have a valid auth config
  common.Auth auth = 9999;

  opts.CreateChannelOptions opts = 1;
}

message CreateChannelResponse {
  common.Status status = 1000;

  // ID of the created channel entry
  string channel_id = 1;
}

///////////////////////////////////////////////////////////////////////////////

// WARNING: Channel will be interrupted if running
message UpdateChannelRequest {
  // Every gRPC request must have a valid auth config
  common.Auth auth = 9999;

  string channel_id = 1;

  opts.CreateChannelOptions opts = 2;
}

message UpdateChannelResponse {
  common.Status status = 1000;
}

///////////////////////////////////////////////////////////////////////////////

message StopChannelRequest {
  // Every gRPC request must have a valid auth config
  common.Auth auth = 9999;

  string channel_id = 1;
}

message StopChannelResponse {
  common.Status status = 1000;
}

///////////////////////////////////////////////////////////////////////////////

message ResumeChannelRequest {
  // Every gRPC request must have a valid auth config
  common.Auth auth = 9999;

  string channel_id = 1;
}

message ResumeChannelResponse {
  common.Status status = 1000;
}

///////////////////////////////////////////////////////////////////////////////

message DeleteChannelRequest {
  // Every gRPC request must have a valid auth config
  common.Auth auth = 9999;

  string channel_id = 1;
}

message DeleteChannelResponse {
  common.Status status = 1000;
}
