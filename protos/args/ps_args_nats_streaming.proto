syntax = "proto3";

package protos.args;

option go_package = "github.com/streamdal/plumber-schemas/build/go/protos/args";

message NatsStreamingTLSOptions {
  // @gotags: kong:"help='CA file (only needed if addr is tls://*)',env='PLUMBER_RELAY_NATS_STREAMING_TLS_CA_CERT'"
  string tls_ca_cert = 1;

  // @gotags: kong:"help='Client cert file (only needed if addr is tls://*)',env='PLUMBER_RELAY_NATS_STREAMING_TLS_CLIENT_CERT'"
  string tls_client_cert = 2;

  // @gotags: kong:"help='Client key file (only needed if addr is tls://*)',env='PLUMBER_RELAY_NATS_STREAMING_TLS_CLIENT_KEY'"
  string tls_client_key = 3;

  // @gotags: kong:"help='Whether to verify server certificate',env='PLUMBER_RELAY_NATS_STREAMING_SKIP_VERIFY_TLS'"
  bool tls_skip_verify = 4;

  // @gotags: kong:"help='Enable TLS',env='PLUMBER_RELAY_NATS_STREAMING_USE_TLS'"
  bool use_tls = 5;
}

message NatsStreamingConn {
  // @gotags: kong:"help='Dial string for NATS server. Ex: nats://localhost:4222',default='nats://localhost:4222',env='PLUMBER_RELAY_NATS_STREAMING_DSN'"
  string dsn = 1;

  // @gotags: kong:"help='NATS .creds file containing authentication credentials',env='PLUMBER_RELAY_NATS_STREAMING_CREDENTIALS'"
  string user_credentials = 2;

  // @gotags: kong:"help='Cluster ID of the Nats server',required,env='PLUMBER_RELAY_NATS_STREAMING_CLUSTER_ID'"
  string cluster_id = 3;

  // @gotags: kong:"help='User specified client ID to connect with',default='plumber',env='PLUMBER_RELAY_NATS_STREAMING_CLIENT_ID'"
  string client_id = 4;

  // @gotags: kong:"embed"
  NatsStreamingTLSOptions tls_options = 5;
}

message NatsStreamingReadArgs {
  // @gotags: kong:"help='NATS stream channel. Ex: orders',env='PLUMBER_RELAY_NATS_STREAMING_CHANNEL'"
  string channel = 1;

  // @gotags: kong:"help='Create a durable subscription with this name for the given channel',env='PLUMBER_RELAY_NATS_STREAMING_DURABLE_SUBSCRIPTION_NAME'"
  string durable_name = 2;

  // @gotags: kong:"help='Deliver starting with last published message',xor=nats_delivery_option,env='PLUMBER_RELAY_NATS_STREAMING_READ_LAST'"
  bool read_last_available = 3;

  // @gotags: kong:"help='Deliver messages starting at sequence number',xor=nats_delivery_option,env='PLUMBER_RELAY_NATS_STREAMING_READ_SEQUENCE'"
  uint32 read_sequence_number = 4;

  // @gotags: kong:"help='Deliver messages in last interval (e.g. 1s, 1h)',xor=nats_delivery_option,env='PLUMBER_RELAY_NATS_STREAMING_READ_SINCE'"
  string read_since = 5;

  // @gotags: kong:"help='Deliver all available messages',xor=nats_delivery_option,env='PLUMBER_RELAY_NATS_STREAMING_READ_ALL'"
  bool read_all = 6;
}

message NatsStreamingWriteArgs {
  // @gotags: kong:"help='NATS stream channel. Ex: orders'"
  string channel = 1;
}
